generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AccountBlockTb {
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  blockerIdx String    @map("blocker_idx") @db.VarChar
  blockedIdx String    @map("blocked_idx") @db.VarChar
  blocker    AccountTb @relation("account_block_tb_blocker_idxToaccount_tb", fields: [blockerIdx], references: [idx], onDelete: Cascade, map: "fk_account_tb_to_account_block_tb")
  blocked    AccountTb @relation("account_block_tb_blocked_idxToaccount_tb", fields: [blockedIdx], references: [idx], onDelete: Cascade, map: "fk_account_tb_to_account_block_tb1")

  @@id([blockerIdx, blockedIdx], map: "account_block_tb_pk")
  @@map("account_block_tb")
}

model AccountTb {
  email                                               String             @db.VarChar
  pw                                                  String?            @db.VarChar
  nickname                                            String             @default(dbgenerated("uuid_generate_v4()")) @db.VarChar
  profile                                             String?
  provider                                            String             @db.VarChar
  providerKey                                         String?            @map("provider_key") @db.VarChar(100)
  createdAt                                           DateTime           @default(now()) @map("created_at") @db.Timestamptz(6)
  deletedAt                                           DateTime?          @map("deleted_at") @db.Timestamptz(6)
  idx                                                 String             @id(map: "account_tb_pk") @default(dbgenerated("uuid_generate_v4()")) @db.VarChar
  serialNumber                                        Int                @unique(map: "account_tb_serial_number_unique") @default(autoincrement()) @map("serial_number")
  interest1                                           String?            @map("interest_1") @db.VarChar(12)
  interest2                                           String?            @map("interest_2") @db.VarChar(12)
  blocker                                             AccountBlockTb[]   @relation("account_block_tb_blocker_idxToaccount_tb")
  blocked                                             AccountBlockTb[]   @relation("account_block_tb_blocked_idxToaccount_tb")
  commentLikeTb                                       CommentLikeTb[]
  commentTb                                           CommentTb[]
  follower                                            FollowTb[]         @relation("follow_tb_follower_idxToaccount_tb")
  followee                                            FollowTb[]         @relation("follow_tb_followee_idxToaccount_tb")
  notificationTbNotificationTbSenderIdxToaccountTb    NotificationTb[]   @relation("notification_tb_sender_idxToaccount_tb")
  notificationTbNotificationTbRecipientIdxToaccountTb NotificationTb[]   @relation("notification_tb_recipient_idxToaccount_tb")
  profileImgTb                                        ProfileImgTb[]
  reportTb                                            ReportTb[]
  reviewBlockTb                                       ReviewBlockTb[]
  reviewBookmarkTb                                    ReviewBookmarkTb[]
  reviewDislikeTb                                     ReviewDislikeTb[]
  reviewLikeTb                                        ReviewLikeTb[]
  reviewShareTb                                       ReviewShareTb[]
  reviewTb                                            ReviewTb[]

  @@map("account_tb")
}

model CommentTb {
  idx           Int             @id @default(autoincrement())
  reviewIdx     Int             @map("review_idx")
  commentIdx    Int?            @map("comment_idx")
  content       String          @db.VarChar
  createdAt     DateTime        @default(now()) @map("created_at") @db.Timestamptz(6)
  deletedAt     DateTime?       @map("deleted_at") @db.Timestamptz(6)
  updatedAt     DateTime?       @map("updated_at") @db.Timestamptz(6)
  accountIdx    String          @map("account_idx") @db.VarChar
  commentLikeTb CommentLikeTb[]
  accountTb     AccountTb       @relation(fields: [accountIdx], references: [idx], onDelete: Cascade, map: "fk_account_tb_to_comment_tb")
  reviewTb      ReviewTb        @relation(fields: [reviewIdx], references: [idx], onDelete: Cascade, map: "fk_review_tb_to_comment_tb")
  reportTb      ReportTb[]

  @@map("comment_tb")
}

model FollowTb {
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  followerIdx String    @map("follower_idx") @db.VarChar
  followeeIdx String    @map("followee_idx") @db.VarChar
  follower    AccountTb @relation("follow_tb_follower_idxToaccount_tb", fields: [followerIdx], references: [idx], onDelete: Cascade, map: "fk_account_tb_to_follow_tb")
  followee    AccountTb @relation("follow_tb_followee_idxToaccount_tb", fields: [followeeIdx], references: [idx], onDelete: Cascade, map: "fk_account_tb_to_follow_tb1")

  @@id([followerIdx, followeeIdx], map: "follow_tb_pk")
  @@map("follow_tb")
}

model ProfileImgTb {
  idx        Int       @id @default(autoincrement())
  imgPath    String    @default("default_img") @map("img_path") @db.VarChar
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  deletedAt  DateTime? @map("deleted_at") @db.Timestamptz(6)
  accountIdx String    @map("account_idx") @db.VarChar
  accountTb  AccountTb @relation(fields: [accountIdx], references: [idx], onDelete: Cascade, map: "fk_account_tb_to_profile_img_tb")

  @@map("profile_img_tb")
}

model ReviewBlockTb {
  reviewIdx  Int       @map("review_idx")
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  accountIdx String    @map("account_idx") @db.VarChar
  accountTb  AccountTb @relation(fields: [accountIdx], references: [idx], onDelete: Cascade, map: "fk_account_tb_to_review_block_tb")
  reviewTb   ReviewTb  @relation(fields: [reviewIdx], references: [idx], onDelete: Cascade, map: "fk_review_tb_to_review_block_tb")

  @@id([reviewIdx, accountIdx], map: "review_block_tb_pk")
  @@map("review_block_tb")
}

model ReviewBookmarkTb {
  reviewIdx  Int       @map("review_idx")
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  accountIdx String    @map("account_idx") @db.VarChar
  accountTb  AccountTb @relation(fields: [accountIdx], references: [idx], onDelete: Cascade, map: "fk_account_tb_to_bookmark_tb")
  reviewTb   ReviewTb  @relation(fields: [reviewIdx], references: [idx], onDelete: Cascade, map: "fk_review_tb_to_bookmark_tb")

  @@id([reviewIdx, accountIdx], map: "review_bookmark_tb_pk")
  @@map("review_bookmark_tb")
}

model ReviewImgTb {
  idx         Int       @id @default(autoincrement())
  reviewIdx   Int       @map("review_idx")
  imgPath     String    @map("img_path") @db.VarChar
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  deletedAt   DateTime? @map("deleted_at") @db.Timestamptz(6)
  content     String    @db.VarChar
  isThumbnail Boolean?  @map("is_thumbnail")
  reviewTb    ReviewTb  @relation(fields: [reviewIdx], references: [idx], onDelete: Cascade, map: "fk_review_tb_to_review_img_tb")

  @@map("review_img_tb")
}

model ReviewShareTb {
  reviewIdx  Int       @map("review_idx")
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  accountIdx String    @default(dbgenerated("uuid_generate_v4()")) @map("account_idx") @db.VarChar
  accountTb  AccountTb @relation(fields: [accountIdx], references: [idx], onDelete: Cascade, map: "fk_account_tb_to_review_share_tb")
  reviewTb   ReviewTb  @relation(fields: [reviewIdx], references: [idx], onDelete: Cascade, map: "fk_review_tb_to_review_share_tb")

  @@id([reviewIdx, accountIdx], map: "review_share_tb_pk")
  @@map("review_share_tb")
}

model ReviewTb {
  idx               Int                @id @default(autoincrement())
  title             String             @db.VarChar
  content           String             @db.VarChar
  viewCount         Int                @default(0) @map("view_count")
  createdAt         DateTime           @default(now()) @map("created_at") @db.Timestamptz(6)
  deletedAt         DateTime?          @map("deleted_at") @db.Timestamptz(6)
  updatedAt         DateTime?          @map("updated_at") @db.Timestamptz(6)
  score             Int
  accountIdx        String             @default(dbgenerated("uuid_generate_v4()")) @map("account_idx") @db.VarChar
  commentTb         CommentTb[]
  reportTb          ReportTb[]
  reviewBlockTb     ReviewBlockTb[]
  reviewBookmarkTb  ReviewBookmarkTb[]
  reviewDislikeTb   ReviewDislikeTb[]
  reviewImgTb       ReviewImgTb[]
  reviewLikeTb      ReviewLikeTb[]
  reviewShareTb     ReviewShareTb[]
  accountTb         AccountTb          @relation(fields: [accountIdx], references: [idx], onDelete: Cascade, map: "fk_account_tb_to_review_tb")
  reviewThumbnailTb ReviewThumbnailTb?
  tagTb             TagTb[]

  @@map("review_tb")
}

model TagTb {
  idx       Int      @id @default(autoincrement())
  reviewIdx Int      @map("review_idx")
  tagName   String   @map("tag_name") @db.VarChar
  reviewTb  ReviewTb @relation(fields: [reviewIdx], references: [idx], onDelete: Cascade, map: "fk_review_tb_to_tag_tb")

  @@map("tag_tb")
}

model VerifiedEmailTb {
  idx        Int      @id @default(autoincrement())
  email      String   @unique(map: "verified_email_email_unique") @db.VarChar
  code       Int
  isVerified Boolean  @default(false) @map("is_verified")
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  @@map("verified_email_tb")
}

model ReviewDislikeTb {
  accountIdx String    @map("account_idx") @db.VarChar
  reviewIdx  Int       @map("review_idx")
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamp(6)
  accountTb  AccountTb @relation(fields: [accountIdx], references: [idx], onDelete: Cascade)
  reviewTb   ReviewTb  @relation(fields: [reviewIdx], references: [idx], onDelete: Cascade)

  @@id([accountIdx, reviewIdx])
  @@map("review_dislike_tb")
}

model ReviewLikeTb {
  reviewIdx  Int       @map("review_idx")
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  accountIdx String    @map("account_idx") @db.VarChar
  accountTb  AccountTb @relation(fields: [accountIdx], references: [idx], onDelete: Cascade, map: "fk_account_tb_to_review_likes_tb")
  reviewTb   ReviewTb  @relation(fields: [reviewIdx], references: [idx], onDelete: Cascade, map: "fk_review_tb_to_review_likes_tb")

  @@id([reviewIdx, accountIdx], map: "review_likes_tb_pk")
  @@map("review_like_tb")
}

model CommentLikeTb {
  commentIdx Int       @map("comment_idx")
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  accountIdx String    @map("account_idx") @db.VarChar
  accountTb  AccountTb @relation(fields: [accountIdx], references: [idx], onDelete: Cascade, map: "fk_account_tb_to_comment_likes_tb")
  commentTb  CommentTb @relation(fields: [commentIdx], references: [idx], onDelete: Cascade, map: "fk_comment_tb_to_comment_likes_tb")

  @@id([commentIdx, accountIdx], map: "comment_likes_tb_pk")
  @@map("comment_like_tb")
}

model NotificationTb {
  recipientIdx       String             @map("recipient_idx") @db.VarChar
  senderIdx          String             @map("sender_idx") @db.VarChar
  type               Int
  reviewIdx          Int?               @map("review_idx")
  readAt             DateTime?          @map("read_at") @db.Timestamptz(6)
  createdAt          DateTime           @default(now()) @map("created_at") @db.Timestamptz(6)
  deletedAt          DateTime?          @map("deleted_at") @db.Timestamptz(6)
  content            String             @db.VarChar
  idx                Int                @id(map: "notification_pkey") @default(autoincrement())
  senderAccountTb    AccountTb          @relation("notification_tb_sender_idxToaccount_tb", fields: [senderIdx], references: [idx], onDelete: Cascade, map: "account_tb_to_notification_2")
  recipientAccounTb  AccountTb          @relation("notification_tb_recipient_idxToaccount_tb", fields: [recipientIdx], references: [idx], onDelete: Cascade, map: "account_tb_to_notification_fk_1")
  notificationTypeTb NotificationTypeTb @relation(fields: [type], references: [idx], onDelete: Cascade, map: "notification_type_to_notification")

  @@map("notification_tb")
}

model NotificationTypeTb {
  idx            Int              @id(map: "notification_type_pkey")
  typeName       String           @map("type_name") @db.VarChar
  notificationTb NotificationTb[]

  @@map("notification_type_tb")
}

model ReviewThumbnailTb {
  reviewIdx Int       @id @map("review_idx")
  imgPath   String    @map("img_path") @db.VarChar
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(6)
  reviewTb  ReviewTb  @relation(fields: [reviewIdx], references: [idx], onDelete: Cascade, map: "review_thumbnail_review_fk")

  @@map("review_thumbnail_tb")
}

model ReportTb {
  idx          Int          @id @default(autoincrement())
  reporterIdx  String       @map("reporter_idx") @db.VarChar
  reviewIdx    Int?         @map("review_idx")
  commentIdx   Int?         @map("comment_idx")
  createdAt    DateTime?    @default(now()) @map("created_at") @db.Timestamptz(6)
  type         Int
  content      String?      @db.VarChar
  accountTb    AccountTb    @relation(fields: [reporterIdx], references: [idx], onDelete: Cascade, map: "report_account_fk")
  commentTb    CommentTb?   @relation(fields: [commentIdx], references: [idx], onDelete: Cascade, map: "report_comment_fk")
  reportTypeTb ReportTypeTb @relation(fields: [type], references: [idx], onDelete: Cascade, map: "report_report_type_fk")
  reviewTb     ReviewTb?    @relation(fields: [reviewIdx], references: [idx], onDelete: Cascade, map: "report_review_fk")

  @@map("report_tb")
}

model ReportTypeTb {
  idx      Int        @id
  typeName String     @map("type_name") @db.VarChar
  reportTb ReportTb[]

  @@map("report_type_tb")
}

view AccountInfoView {
  email        String    @db.VarChar
  nickname     String    @db.VarChar
  profile      String?
  provider     String    @db.VarChar
  createdAt    DateTime  @map("created_at") @db.Timestamptz(6)
  deletedAt    DateTime? @map("deleted_at") @db.Timestamptz(6)
  idx          String    @unique @db.VarChar
  serialNumber Int       @map("serial_number")
  imgPath      String?   @map("img_path") @db.VarChar
  interest1    String?   @map("interest_1") @db.VarChar(12)
  interest2    String?   @map("interest_2") @db.VarChar(12)

  @@map("account_info_view")
}

view AccountDetailView {
  idx           String    @unique @db.VarChar
  email         String    @db.VarChar
  nickname      String    @db.VarChar
  profile       String?
  provider      String    @db.VarChar
  createdAt     DateTime  @map("created_at") @db.Timestamptz(6)
  deletedAt     DateTime? @map("deleted_at") @db.Timestamptz(6)
  serialNumber  Int       @map("serial_number")
  profileImg    String    @map("profile_img") @db.VarChar
  followerCount Int?      @map("follower_count")
  followeeCount Int?      @map("followee_count")
  interest1     String?   @map("interest_1") @db.VarChar(12)
  interest2     String?   @map("interest_2") @db.VarChar(12)

  @@map("account_detail_view")
}
